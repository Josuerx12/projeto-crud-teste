// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  avatar    String?
  id        String  @id @default(uuid())
  firstName String
  lastName  String
  email     String  @unique
  password  String

  comment       comment[]
  post          post[]
  likesDislikes likesDislikes[]

  @@map("users")
}

model post {
  id          String   @id @default(uuid())
  title       String
  images      String[]
  tags        String
  description String

  owner   user   @relation(fields: [ownerId], references: [id])
  ownerId String

  comments      comment[]
  likesDislikes likesDislikes[]

  @@map("posts")
}

model comment {
  id      String @id @default(uuid())
  comment String

  owner   user   @relation(fields: [ownerId], references: [id])
  ownerId String

  post   post?   @relation(fields: [postId], references: [id])
  postId String?

  @@map("comments")
}

model likesDislikes {
  id String @id @default(uuid())

  post   post    @relation(fields: [postId], references: [id])
  user   user    @relation(fields: [userId], references: [id])
  like   Boolean
  postId String
  userId String

  @@unique([postId, userId])
}
